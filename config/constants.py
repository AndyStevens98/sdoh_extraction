from collections import OrderedDict
import numpy as np


def ATTR_TYPE_MAP(x):
    return f"{x}Val"


OVERALL = "OVERALL"

LABEL_DEFINITION_FILE = "label_definition.pkl"

UW = "uw"
MIMIC = "mimic"
MTSAMPLES = "MTSamples"

"""
Determinants
"""
ALCOHOL = "Alcohol"
DRUG = "Drug"
ENVIRO_EXPOSURE = "EnvironmentalExposure"
FAMILY = "Family"
INFECT_DISEASES = "InfectiousDiseases"
LIVING_SITUATION = "LivingSituation"
MARITAL_STATUS = "MaritalStatus"
OCCUPATION = "Occupation"
PHYSICAL_ACTIVITY = "PhysicalActivity"
RESIDENCE = "Residence"
SEXUAL_HISTORY = "SexualHistory"
TOBACCO = "Tobacco"
WEIGHT_MANAGE = "WeightManagement"

"""
Entities
"""

TRIGGER = "Trigger"

STATUS = "Status"

# Span only - new
AMOUNT = "Amount"
EXPOSURE_HISTORY = "ExposureHistory"
EXTENT = "Extent"
FREQUENCY = "Frequency"
HISTORY = "History"
LIVING_STATUS = "LivingStatus"
LOCATION = "Location"
MEDICAL_CONDITION = "MedicalCondition"
METHOD = "Method"
OTHER = "Other"
QUIT_HISTORY = "QuitHistory"
TEMPORAL = "Temporal"
TYPE = "Type"

CURRENT = "current"
PAST = "past"
FUTURE = "future"
NONE = "none"
UNKNOWN = "unknown"

EVENT_TYPES = [
    ALCOHOL,
    DRUG,
    ENVIRO_EXPOSURE,
    FAMILY,
    INFECT_DISEASES,
    LIVING_SITUATION,
    MARITAL_STATUS,
    OCCUPATION,
    PHYSICAL_ACTIVITY,
    RESIDENCE,
    SEXUAL_HISTORY,
    TOBACCO,
    WEIGHT_MANAGE,
]

LABELED_ARGUMENTS = []
SPAN_ONLY_ARGUMENTS = [
    AMOUNT,
    EXPOSURE_HISTORY,
    EXTENT,
    FREQUENCY,
    HISTORY,
    LIVING_STATUS,
    LOCATION,
    MEDICAL_CONDITION,
    METHOD,
    OTHER,
    QUIT_HISTORY,
    TEMPORAL,
    TYPE,
]

ARGUMENT_TYPES = [
    AMOUNT,
    EXPOSURE_HISTORY,
    EXTENT,
    FREQUENCY,
    HISTORY,
    LIVING_STATUS,
    LOCATION,
    MEDICAL_CONDITION,
    METHOD,
    OTHER,
    QUIT_HISTORY,
    STATUS,
    TEMPORAL,
    TYPE,
]

# ENTITY_TYPES = EVENT_TYPES + ARGUMENTS

# SUBTYPES_BY_ARGUMENT = {}
# SUBTYPES_BY_ARGUMENT[STATUS_TIME] = [NONE, CURRENT, PAST, FUTURE]
# SUBTYPES_BY_ARGUMENT[STATUS_EMPLOY] = [EMPLOYED, UNEMPLOYED, RETIRED, ON_DISABILITY, STUDENT, HOMEMAKER]
# SUBTYPES_BY_ARGUMENT[TYPE_LIVING] = [ALONE, WITH_FAMILY, WITH_OTHERS]


STATUS_CLASSES = [NONE, CURRENT, PAST, FUTURE, UNKNOWN]

SUBTYPES = STATUS_CLASSES


ARGUMENTS_BY_EVENT_TYPE = {}
ARGUMENTS_BY_EVENT_TYPE[ALCOHOL] = [
    STATUS,
    TYPE,
    TEMPORAL,
    METHOD,
    AMOUNT,
    FREQUENCY,
    HISTORY,
    EXPOSURE_HISTORY,
    QUIT_HISTORY,
]
ARGUMENTS_BY_EVENT_TYPE[DRUG] = ARGUMENTS_BY_EVENT_TYPE[ALCOHOL]
ARGUMENTS_BY_EVENT_TYPE[TOBACCO] = ARGUMENTS_BY_EVENT_TYPE[ALCOHOL]
ARGUMENTS_BY_EVENT_TYPE[OCCUPATION] = [STATUS, TYPE, TEMPORAL, METHOD, LOCATION, EXTENT]
ARGUMENTS_BY_EVENT_TYPE[MARITAL_STATUS] = [STATUS, TYPE, TEMPORAL, AMOUNT]
ARGUMENTS_BY_EVENT_TYPE[RESIDENCE] = [STATUS, TYPE, TEMPORAL, METHOD, LOCATION]
ARGUMENTS_BY_EVENT_TYPE[FAMILY] = [
    LIVING_STATUS,
    TYPE,
    TEMPORAL,
    AMOUNT,
    MEDICAL_CONDITION,
    OTHER,
]
ARGUMENTS_BY_EVENT_TYPE[LIVING_SITUATION] = [STATUS, TEMPORAL, METHOD]
ARGUMENTS_BY_EVENT_TYPE[ENVIRO_EXPOSURE] = [
    STATUS,
    TYPE,
    TEMPORAL,
    METHOD,
    AMOUNT,
    FREQUENCY,
]
ARGUMENTS_BY_EVENT_TYPE[PHYSICAL_ACTIVITY] = [STATUS, TYPE, TEMPORAL, AMOUNT, FREQUENCY]
ARGUMENTS_BY_EVENT_TYPE[WEIGHT_MANAGE] = [STATUS, TYPE, TEMPORAL, METHOD, AMOUNT]
ARGUMENTS_BY_EVENT_TYPE[SEXUAL_HISTORY] = [
    STATUS,
    TYPE,
    TEMPORAL,
    METHOD,
    AMOUNT,
    FREQUENCY,
    HISTORY,
]
ARGUMENTS_BY_EVENT_TYPE[INFECT_DISEASES] = [STATUS, TYPE, TEMPORAL]

ARGUMENT2ROLE = {}
ARGUMENT2ROLE[STATUS] = STATUS

# SUBTYPES = [v for k, V in SUBTYPES_BY_ARGUMENT.items() for v in V]

SUBTYPE_DEFAULT = "None"


SPAN_ONLY = "Span_only"


NO_SUBTYPE = "no_subtype"
NO_CONCAT = "no_concat"
CONCAT_LOGITS = "concat_logits"
CONCAT_PROBS = "concat_probs"
LABEL_BIAS = "label_bias"


CORPUS_FILE = "corpus.pkl"
SCORES_FILE = "scores.csv"
MODEL_FILE = "model.pt"

TEXT_FILE_EXT = "txt"
ANN_FILE_EXT = "ann"
EVENT = "event"
RELATION = "relation"
TEXTBOUND = "textbound"
ATTRIBUTE = "attribute"

ENCODING = "utf-8"

NA = "N/A"

# BRAT files
ANNOTATION_CONF = "annotation_mtsamples.conf"
VISUAL_CONF = "visual.conf"
ATTRIBUTE_PATTERN = "{}_"


ENTITIES = "entities"
ENTITY = "entity"
ENTITIES_SUMMARY = "entities_summary"
RELATIONS = "relations"
RELATIONS_SUMMARY = "relations_summary"
DOC_LABELS = "doc_labels"
DOC_LABELS_SUMMARY = "doc_labels_summary"
SENT_LABELS = "sent_labels"
SENT_LABELS_SUMMARY = "sent_labels_summary"
EVENTS = "events"
COUNT = "count"
LABELED = "Labeled"
EVENT_TYPE = "event_type"
ARGUMENT = "argument"
ARGUMENTS = "arguments"
START = "start"
END = "end"
TOKENS = "token"
HEAD = "head"
TAIL = "tail"

EXACT = "exact"
PARTIAL = "partial"
OVERLAP = "overlap"
LABEL = "label"
MIN_DIST = "min_dist"

NONE = "none"
ID = "id"
SUBSET = "subset"

TRIGGER = "Trigger"

# TYPE = "type"
SUBTYPE = "subtype"
ARG_1 = "argument 1"
ARG_2 = "argument 2"
ROLE = "role"
SUBTYPE_A = "subtype_a"
SUBTYPE_B = "subtype_b"
ROLE = "role"
TRIGGER_SUBTYPE = "trigger_subtype"
ENTITY_SUBTYPE = "entity_subtype"


TRAIN = "train"
DEV = "dev"
TRAIN_DEV = "train_dev"
EVAL = "eval"
TEST = "test"
QC = "qc"
CV = "cv"
CV_PREDICT = "cv_predict"
CV_TUNE = "cv_tune"
PREDICT = "predict"
FIT = "fit"
SCORE = "score"
PROB = "prob"


NT = "NT"
NP = "NP"
TP = "TP"
TN = "TN"
FP = "FP"
FN = "FN"
P = "P"
R = "R"
F1 = "F1"
MICRO = "micro"
ANNOTATOR_A = "annotator A"
ANNOTATOR_B = "annotator B"
METRIC = "metric"

PARAMS_FILE = "parameters.pkl"
STATE_DICT = "state_dict.pt"
PREDICTIONS_FILE = "predictions.pkl"
PREDICTIONS_JSON = "predictions.json"

SUBTYPE_DEFAULT = "None"


SPACY_MODEL = "en_core_web_sm"

MIMIC = "mimic"

DARK_RED = tuple(np.array([184, 84, 80]) / 255)
DARK_BLUE = tuple(np.array([108, 142, 191]) / 255)
DARK_GOLD = tuple(np.array([224, 172, 46]) / 255)
DARK_GREEN = tuple(np.array([127, 177, 98]) / 255)
DARK_GRAY = tuple(np.array([102, 102, 102]) / 255)
DARK_ORANGE = tuple(np.array([215, 155, 0]) / 255)


"""
Labeling
"""
BEGIN = "B-"
INSIDE = "I-"
OUTSIDE = "O"
UNKNOWN = "unknown"
NEG_LABEL = 0


START_TOKEN = "<s>"
END_TOKEN = "</s>"
UNK = "<unk>"


TRIGGER = "Trigger"
LAB_TYPE = "label_type"
ARGUMENT = "Argument"
LAB_DEF = "label_definition"
LAB_MAP = "label_map"
SEQ = "sequence"
SENT = "sentence"


MULTITASK_LABEL_DEF = OrderedDict()
MULTITASK_LABEL_DEF[TRIGGER] = OrderedDict()
MULTITASK_LABEL_DEF[TRIGGER][LAB_TYPE] = SENT
MULTITASK_LABEL_DEF[TRIGGER][ARGUMENT] = TRIGGER
MULTITASK_LABEL_DEF[TRIGGER][LAB_MAP] = OrderedDict()
MULTITASK_LABEL_DEF[TRIGGER][LAB_MAP][ALCOHOL] = [OUTSIDE, ALCOHOL]
MULTITASK_LABEL_DEF[TRIGGER][LAB_MAP][DRUG] = [OUTSIDE, DRUG]
MULTITASK_LABEL_DEF[TRIGGER][LAB_MAP][TOBACCO] = [OUTSIDE, TOBACCO]
MULTITASK_LABEL_DEF[TRIGGER][LAB_MAP][OCCUPATION] = [OUTSIDE, OCCUPATION]
MULTITASK_LABEL_DEF[TRIGGER][LAB_MAP][MARITAL_STATUS] = [OUTSIDE, MARITAL_STATUS]
MULTITASK_LABEL_DEF[TRIGGER][LAB_MAP][RESIDENCE] = [OUTSIDE, RESIDENCE]
MULTITASK_LABEL_DEF[TRIGGER][LAB_MAP][FAMILY] = [OUTSIDE, FAMILY]
MULTITASK_LABEL_DEF[TRIGGER][LAB_MAP][LIVING_SITUATION] = [OUTSIDE, LIVING_SITUATION]
MULTITASK_LABEL_DEF[TRIGGER][LAB_MAP][ENVIRO_EXPOSURE] = [OUTSIDE, ENVIRO_EXPOSURE]
MULTITASK_LABEL_DEF[TRIGGER][LAB_MAP][PHYSICAL_ACTIVITY] = [OUTSIDE, PHYSICAL_ACTIVITY]
MULTITASK_LABEL_DEF[TRIGGER][LAB_MAP][WEIGHT_MANAGE] = [OUTSIDE, WEIGHT_MANAGE]
MULTITASK_LABEL_DEF[TRIGGER][LAB_MAP][SEXUAL_HISTORY] = [OUTSIDE, SEXUAL_HISTORY]
MULTITASK_LABEL_DEF[TRIGGER][LAB_MAP][INFECT_DISEASES] = [OUTSIDE, INFECT_DISEASES]

# Label map-status
MULTITASK_LABEL_DEF[STATUS] = OrderedDict()
MULTITASK_LABEL_DEF[STATUS][LAB_TYPE] = SENT
MULTITASK_LABEL_DEF[STATUS][ARGUMENT] = STATUS
MULTITASK_LABEL_DEF[STATUS][LAB_MAP] = OrderedDict()
MULTITASK_LABEL_DEF[STATUS][LAB_MAP][ALCOHOL] = [OUTSIDE] + STATUS_CLASSES
MULTITASK_LABEL_DEF[STATUS][LAB_MAP][DRUG] = [OUTSIDE] + STATUS_CLASSES
MULTITASK_LABEL_DEF[STATUS][LAB_MAP][TOBACCO] = [OUTSIDE] + STATUS_CLASSES
MULTITASK_LABEL_DEF[STATUS][LAB_MAP][OCCUPATION] = [OUTSIDE] + STATUS_CLASSES
MULTITASK_LABEL_DEF[STATUS][LAB_MAP][MARITAL_STATUS] = [OUTSIDE] + STATUS_CLASSES
MULTITASK_LABEL_DEF[STATUS][LAB_MAP][RESIDENCE] = [OUTSIDE] + STATUS_CLASSES
MULTITASK_LABEL_DEF[STATUS][LAB_MAP][LIVING_SITUATION] = [OUTSIDE] + STATUS_CLASSES
MULTITASK_LABEL_DEF[STATUS][LAB_MAP][ENVIRO_EXPOSURE] = [OUTSIDE] + STATUS_CLASSES
MULTITASK_LABEL_DEF[STATUS][LAB_MAP][PHYSICAL_ACTIVITY] = [OUTSIDE] + STATUS_CLASSES
MULTITASK_LABEL_DEF[STATUS][LAB_MAP][WEIGHT_MANAGE] = [OUTSIDE] + STATUS_CLASSES
MULTITASK_LABEL_DEF[STATUS][LAB_MAP][SEXUAL_HISTORY] = [OUTSIDE] + STATUS_CLASSES
MULTITASK_LABEL_DEF[STATUS][LAB_MAP][INFECT_DISEASES] = [OUTSIDE] + STATUS_CLASSES


# Label map-entity
MULTITASK_LABEL_DEF[ENTITY] = OrderedDict()
MULTITASK_LABEL_DEF[ENTITY][LAB_TYPE] = SEQ
MULTITASK_LABEL_DEF[ENTITY][LAB_MAP] = OrderedDict()
MULTITASK_LABEL_DEF[ENTITY][LAB_MAP][ALCOHOL] = [
    OUTSIDE,
    TYPE,
    TEMPORAL,
    METHOD,
    AMOUNT,
    FREQUENCY,
    HISTORY,
    EXPOSURE_HISTORY,
    QUIT_HISTORY,
]
MULTITASK_LABEL_DEF[ENTITY][LAB_MAP][DRUG] = [
    OUTSIDE,
    TYPE,
    TEMPORAL,
    METHOD,
    AMOUNT,
    FREQUENCY,
    HISTORY,
    EXPOSURE_HISTORY,
    QUIT_HISTORY,
]
MULTITASK_LABEL_DEF[ENTITY][LAB_MAP][TOBACCO] = [
    OUTSIDE,
    TYPE,
    TEMPORAL,
    METHOD,
    AMOUNT,
    FREQUENCY,
    HISTORY,
    EXPOSURE_HISTORY,
    QUIT_HISTORY,
]
MULTITASK_LABEL_DEF[ENTITY][LAB_MAP][OCCUPATION] = [
    OUTSIDE,
    TYPE,
    TEMPORAL,
    METHOD,
    LOCATION,
    EXTENT,
]
MULTITASK_LABEL_DEF[ENTITY][LAB_MAP][MARITAL_STATUS] = [OUTSIDE, TYPE, TEMPORAL, AMOUNT]
MULTITASK_LABEL_DEF[ENTITY][LAB_MAP][RESIDENCE] = [
    OUTSIDE,
    TYPE,
    TEMPORAL,
    METHOD,
    LOCATION,
]
MULTITASK_LABEL_DEF[ENTITY][LAB_MAP][FAMILY] = [
    OUTSIDE,
    LIVING_STATUS,
    TYPE,
    TEMPORAL,
    AMOUNT,
    MEDICAL_CONDITION,
    OTHER,
]
MULTITASK_LABEL_DEF[ENTITY][LAB_MAP][LIVING_SITUATION] = [OUTSIDE, TEMPORAL, METHOD]
MULTITASK_LABEL_DEF[ENTITY][LAB_MAP][ENVIRO_EXPOSURE] = [
    OUTSIDE,
    TYPE,
    TEMPORAL,
    METHOD,
    AMOUNT,
    FREQUENCY,
]
MULTITASK_LABEL_DEF[ENTITY][LAB_MAP][PHYSICAL_ACTIVITY] = [
    OUTSIDE,
    TYPE,
    TEMPORAL,
    AMOUNT,
    FREQUENCY,
]
MULTITASK_LABEL_DEF[ENTITY][LAB_MAP][WEIGHT_MANAGE] = [
    OUTSIDE,
    TYPE,
    TEMPORAL,
    METHOD,
    AMOUNT,
]
MULTITASK_LABEL_DEF[ENTITY][LAB_MAP][SEXUAL_HISTORY] = [
    OUTSIDE,
    TYPE,
    TEMPORAL,
    METHOD,
    AMOUNT,
    FREQUENCY,
    HISTORY,
]
MULTITASK_LABEL_DEF[ENTITY][LAB_MAP][INFECT_DISEASES] = [OUTSIDE, TYPE, TEMPORAL]
